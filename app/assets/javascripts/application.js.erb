// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// the compiled file.
//
// WARNING: THE FIRST BLANK LINE MARKS THE END OF WHAT'S TO BE PROCESSED, ANY BLANK LINE SHOULD
// GO AFTER THE REQUIRES BELOW.
//
//= require jquery
//= require jquery_ujs
//= require vendor/custom.modernizr
//= require foundation/foundation
//= require foundation/foundation.alerts
//= require foundation/foundation.forms
//= require foundation/foundation.section
//= require foundation/foundation.tooltips
//= require foundation/foundation.placeholder
//= require foundation/foundation.abide
//= require foundation/foundation.dropdown
//= require foundation/foundation.topbar
//= require JavaScript-Templates/js/tmpl.min
//= require jQuery-File-Upload/js/vendor/jquery.ui.widget
//= require jQuery-File-Upload/js/jquery.iframe-transport
//= require jQuery-File-Upload/js/jquery.fileupload

$(function() {
  var minVer = 9;
  var el = $("<div>").prop("id", "ieDetect");
  $("body").append(el);
  el.html("<!--[if IE]><em></em><![endif]-->");
  if (el.find("em").length) {
    for (var v = 6; v < 15; v++) {
      el.html("<!--[if lte IE " + v + "]><b></b><![endif]-->");
      if (el.find("b").length) break;
    }
    if (v < minVer) {
      $("html").addClass("unsupportedBrowser");
      $.getScript("<%= asset_path('unsupported_browser.js') %>");
    }
  }
  el.remove();
  
  $(document).foundation();
  
  
  function updateCharCount() {
    shortStoriesBox.find(".chars span").html(maxChars - shortStoriesBox.find("textarea").val().length);
  }
  var shortStoriesBox = $(".short_stories");
  if (shortStoriesBox.length) {
    var maxChars = parseInt(shortStoriesBox.find(".chars span").text());
    $(".short_stories textarea").keyup(updateCharCount);
    updateCharCount();
  }
  
  
  function updatePolls(info) {
    $.each(info, function (pId, options) {
      var poll = polls.find("#poll_"+pId);
      $.each(options, function (oId, optionInfo) {
        var option = poll.find("#poll_option_"+oId);
        option.find("input").prop("checked", optionInfo.v ? "checked" : "");
        option.find(".progress .meter").css({ width: optionInfo.p + "%" }).siblings(".info").text(optionInfo.p + " %");
      });
    });
  }
  function togglePollBtns(poll, toggle) {
    $(":submit", poll).prop("disabled", !toggle).toggleClass("disabled", !toggle);
  }
  var polls = $(".polls_index");
  if (polls.length) {
    polls.find("form").submit(function () {
      togglePollBtns(this, false);
    })
    .on("ajax:success", function (e, data) {
      if (data.new_option) {
        $(data.new_option).hide().insertAfter($(".poll_option", this).last()).slideDown();
      }
      $("input[type=text]", this).val("");
      updatePolls(data.options);
      togglePollBtns(this, true);
    });
    $.get(polls.data("results-path"), function (data) {
      updatePolls(data.options);
    });
  }
  
  $(".new_photo").fileupload({
    dataType: "json",
    done: function (e, data) {
      var file = data.result.file, context = data.context;
      var slideUpTime = 1000, progressClass = "success";
      if (!file.error) {
        context.form.find(".no-photos").slideUp();
        var pic = $(file.html).appendTo(context.form.find(".gallery").show()).fadeTo(0, 0);
        pic.find("img").load(function () {
          pic.fadeTo(600, 1);
        });
      } else {
        context.progress.find(".error").html(file.error);
        slideUpTime = 10000;
        progressClass = "alert";
      }
      context.progress.find(".progress").addClass(progressClass);
      setTimeout(function () {
        context.progress.slideUp();
      }, slideUpTime);
    },
    add: function (e, data) {
      data.context = { progress: $(tmpl("template-upload", data.files[0])), form: $(this).parent(".photo-form") };
      data.context.form.find(".photo-progress").append(data.context.progress);
      data.submit();
    },
    progress: function (e, data) {
      if (data.context) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        data.context.progress.find('.meter').css({ width: progress + "%" });
      }
    }
  });
  
  $(document).on("ajax:beforeSend", ".delete-btn", function () {
    $(this).hide();
  }).on("ajax:success", ".delete-element", function (r, t, z) {
    $(this).slideUp("fast", function () {
      $(this).remove();
    });
  });
  
  function update_song(file) {
    if (!file.error) {
      var preview = $(".my-song");
      var newSong = $(file.html).hide();
      if (preview.length) {
        pause_audio();
        preview.slideUp(function () {
          $(this).replaceWith(newSong);
        });
      } else {
        $(".edit_song, .new_song").after(newSong);
      }
      newSong.slideDown();
    } else {
      $(".error").html(file.error);
    }
  }
  
  function pause_audio() {
    var audio = $("audio");
    audio[0].pause();
    $(".song-preview.playing").removeClass("playing").find("button i").toggle();
    return audio;
  }
  
  $(".edit_song, .new_song").fileupload({
    dataType: "json",
    done: function (e, data) {
      var file = data.result.file;
      var progressClass = (!file.error) ? "success" : "alert";
      update_song(file);
      $("#song_file").prop("disabled", false);
      $(".progress").addClass(progressClass).delay(1000).fadeOut(function () {
        $(this).removeClass(progressClass);
      });
    },
    add: function (e, data) {
      $(".error").empty();
      $("#song_file").prop("disabled", true);
      $(".progress").fadeIn().find(".meter").css({ width: 0 });
      data.submit();
    },
    progress: function (e, data) {
      var progress = parseInt(data.loaded / data.total * 100, 10);
      $(".progress .meter").css({ width: progress + "%" });
    }
  }).on("ajax:success", function (_, data) {
    update_song(data.file);
  });
  
  $(document).on("click", ".song-preview button", function () {
    var preview = $(this).parents(".song-preview");
    var wasPlaying = preview.is(".playing");
    var audio = pause_audio();
    if (!wasPlaying) {
      audio.prop("src", preview.data("audio-path"));
      audio[0].play();
      $("i", this).toggle();
      preview.addClass("playing");
    }
  });
  
  $("audio").on("ended", function () {
    pause_audio();
  });
});
